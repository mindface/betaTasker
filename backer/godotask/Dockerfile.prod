# Go Backend Production Dockerfile

# ===== Build Stage =====
FROM golang:1.21-alpine AS builder

WORKDIR /app

# Install dependencies
RUN apk add --no-cache git

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy .env files if they exist
COPY .env* ./

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

# ===== Production Stage =====
FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the binary from builder
COPY --from=builder /app/main .

# Copy .env files from builder if they exist
COPY --from=builder /app/.env* ./

# Copy static files and templates if needed
COPY --from=builder /app/static ./static
COPY --from=builder /app/templates ./templates
COPY --from=builder /app/view ./view

# If .env doesn't exist, create it with default values
RUN if [ ! -f .env ]; then \
    echo "# Production Environment Variables" > .env && \
    echo "DB_HOST=db" >> .env && \
    echo "DB_PORT=5432" >> .env && \
    echo "DB_USER=dbgodotask" >> .env && \
    echo "DB_PASSWORD=dbgodotask" >> .env && \
    echo "DB_NAME=dbgodotask" >> .env && \
    echo "GIN_MODE=release" >> .env && \
    echo "JWT_SECRET=default-jwt-secret" >> .env; \
    fi

# Expose port
EXPOSE 8080

# Run the binary
CMD ["./main"]